name: Jest CI

on:
  push:
    branches: ["main"]
    paths: ["backend/**"]
  pull_request:
    branches: ["main"]
    paths: ["backend/**"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 19.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydb
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache-dependency-path: ./backend/yarn.lock
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Setup Dotenv, Dependencies .
        working-directory: ./backend/
        run: |
          echo 'NODE_ENV = "test"' > .env
          yarn install
      - name: Generate Prisma Client, migrations and seed
        working-directory: ./backend/
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5433/mydb
        run: |
          npx prisma generate
          npx prisma db push --accept-data-loss

      - name: Run Jest Tests
        working-directory: ./backend/
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5433/mydb
        run: yarn test:ci
